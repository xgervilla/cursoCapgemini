{
	"info": {
		"_postman_id": "08107e20-ba54-4ae6-8a38-b9ccd91045ca",
		"name": "Catalogo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26770895"
	},
	"item": [
		{
			"name": "Films",
			"item": [
				{
					"name": "OK",
					"item": [
						{
							"name": "Get basic film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Values obtained\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.key).to.eql(1);\r",
											"    pm.expect(jsonData.value).to.eql(\"ACADEMY DINOSAUR\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/peliculas/v1/1?basic",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"peliculas",
										"v1",
										"1"
									],
									"query": [
										{
											"key": "basic",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all films",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/peliculas/v1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"peliculas",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get complete film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Values obtained\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"    pm.expect(jsonData.titulo).to.eql(\"ACADEMY DINOSAUR\");\r",
											"    pm.expect(jsonData.descripcion).to.eql(\"A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies\");\r",
											"    pm.expect(jsonData.valoracion).to.eql(\"PARENTAL_GUIDANCE_SUGGESTED\");\r",
											"    pm.expect(jsonData.duracion).to.eql(86);\r",
											"    pm.expect(jsonData.replacement_cost).to.eql(20.99);\r",
											"    pm.expect(jsonData.rental_duration).to.eql(6);\r",
											"    pm.expect(jsonData.rental_rate).to.eql(0.99);\r",
											"    pm.expect(jsonData.release_year).to.eql(2006);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/peliculas/v1/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"peliculas",
										"v1",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "add new film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function() {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 0,\r\n    \"titulo\": \"Fast and furious 11\",\r\n    \"descripcion\": \"An extraordinary film of cars, family and action\",\r\n    \"duracion\": 86,\r\n    \"valoracion\": \"PARENTAL_GUIDANCE_SUGGESTED\",\r\n    \"release_year\": 2006,\r\n    \"rental_duration\": 6,\r\n    \"rental_rate\": 0.99,\r\n    \"replacement_cost\": 20.99,\r\n    \"lenguaje\": {\r\n        \"ID\": 1,\r\n        \"Language\": \"English\"\r\n    },\r\n    \"vo\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/peliculas/v1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"peliculas",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "get new film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Values obtained\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1039);\r",
											"    pm.expect(jsonData.titulo).to.eql(\"Fast and Furious 11: extended edition\");\r",
											"    pm.expect(jsonData.descripcion).to.eql(\"An extraordinary film of cars, family, action and comedy\");\r",
											"    pm.expect(jsonData.valoracion).to.eql(\"PARENTAL_GUIDANCE_SUGGESTED\");\r",
											"    pm.expect(jsonData.duracion).to.eql(95);\r",
											"    pm.expect(jsonData.replacement_cost).to.eql(20.99);\r",
											"    pm.expect(jsonData.rental_duration).to.eql(6);\r",
											"    pm.expect(jsonData.rental_rate).to.eql(0.99);\r",
											"    pm.expect(jsonData.release_year).to.eql(2008);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8001/api/peliculas/v1/1039",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"peliculas",
										"v1",
										"1039"
									]
								}
							},
							"response": []
						},
						{
							"name": "update new film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function() {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1039,\r\n    \"titulo\": \"Fast and Furious 11: extended edition\",\r\n    \"descripcion\": \"An extraordinary film of cars, family, action and comedy\",\r\n    \"duracion\": 95,\r\n    \"valoracion\": \"PARENTAL_GUIDANCE_SUGGESTED\",\r\n    \"release_year\": 2008,\r\n    \"rental_duration\": 6,\r\n    \"rental_rate\": 0.99,\r\n    \"replacement_cost\": 20.99,\r\n    \"lenguaje\": {\r\n        \"ID\": 1,\r\n        \"Language\": \"English\"\r\n    },\r\n    \"vo\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/peliculas/v1/1039",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"peliculas",
										"v1",
										"1039"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete new film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function() {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8001/api/peliculas/v1/1037",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"peliculas",
										"v1",
										"1037"
									]
								}
							},
							"response": []
						},
						{
							"name": "get first page of films",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Number of films in page\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.size).to.eql(20);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/films/v1?page=0&size=20&sort=title",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"films",
										"v1"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "20"
										},
										{
											"key": "sort",
											"value": "title"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "KO",
					"item": [
						{
							"name": "Invalid get of film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function() {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Title of error\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Not Found\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/peliculas/v1/2000",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"peliculas",
										"v1",
										"2000"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Actors",
			"item": [
				{
					"name": "KO",
					"item": [
						{
							"name": "Invalid post of actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function() {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Title of error\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Bad Request\");\r",
											"    pm.expect(jsonData.errors.firstName).to.eql(\"must not be blank\");\r",
											"    pm.expect(jsonData.errors.lastName).to.eql(\"must be in capital letters\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\":0,\r\n    \"nombre\": \"  \",\r\n    \"apellidos\":\"GUInness\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/actores/v1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"actores",
										"v1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "OK",
					"item": [
						{
							"name": "get all actors",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/actores/v1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"actores",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "get first actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"    pm.expect(jsonData.nombre).to.eql(\"PENELOPE\");\r",
											"    pm.expect(jsonData.apellidos).to.eql(\"GUINESS\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/actores/v1/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"actores",
										"v1",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function() {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/actores/v1/210",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"actores",
										"v1",
										"210"
									]
								}
							},
							"response": []
						},
						{
							"name": "get first page of actors",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Number of actors in page\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.size).to.eql(10);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/actores/v1?page=0&size=10&sort=firstName",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"actores",
										"v1"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "sort",
											"value": "firstName"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "add new actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function() {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\":0,\r\n    \"nombre\":\"Nuevo actor 2\",\r\n    \"apellidos\":\"YOTAMBIENSOYNUEVO\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/actores/v1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"actores",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "update existing actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function() {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\":216,\r\n    \"nombre\":\"ActorModificado\",\r\n    \"apellidos\":\"AHORAESTOYMODIFICADO\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/actores/v1/216",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"actores",
										"v1",
										"216"
									]
								}
							},
							"response": []
						},
						{
							"name": "get films of actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/actores/v1/5/pelis",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"actores",
										"v1",
										"5",
										"pelis"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Language",
			"item": [
				{
					"name": "OK",
					"item": [
						{
							"name": "Get all languages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/lenguajes/v1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"lenguajes",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get one language",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Values of response\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.ID).to.eql(1);\r",
											"    pm.expect(jsonData.Name).to.eql(\"English\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/lenguajes/v1/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"lenguajes",
										"v1",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "add new language",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function() {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ID\": 0,\r\n    \"Name\": \"Portuguese\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/lenguajes/v1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"lenguajes",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "update existing language",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function() {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ID\": 15,\r\n    \"Name\": \"Brazilian\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/lenguajes/v1/15",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"lenguajes",
										"v1",
										"15"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete existing language",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function() {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/lenguajes/v1/14",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"lenguajes",
										"v1",
										"14"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "KO",
					"item": [
						{
							"name": "Invalid update of language",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function() {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Invalid Data\");\r",
											"    pm.expect(jsonData.errors.name).to.eql(\"must not be blank\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ID\": 5,\r\n    \"Name\": \"     \"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/lenguajes/v1/5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"lenguajes",
										"v1",
										"5"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "OK",
					"item": [
						{
							"name": "Get all categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/categorias/v1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"categorias",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "add new category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function() {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ID\": 0,\r\n    \"Category\": \"Spanish\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/categorias/v1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"categorias",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete existing category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function() {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/categorias/v1/21",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"categorias",
										"v1",
										"21"
									]
								}
							},
							"response": []
						},
						{
							"name": "update existing category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function() {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ID\": 23,\r\n    \"Category\": \"Cartoons\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/categorias/v1/23",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"categorias",
										"v1",
										"23"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get one category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Values of response\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.ID).to.eql(1);\r",
											"    pm.expect(jsonData.Category).to.eql(\"Action\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/api/categorias/v1/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"categorias",
										"v1",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "KO",
					"item": [
						{
							"name": "Invalid update of category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function() {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Bad Request\");\r",
											"    pm.expect(jsonData.detail).to.eql(\"IDs of category don't match\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ID\": 7,\r\n    \"Category\": \"Comedy\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8001/api/categorias/v1/5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"api",
										"categorias",
										"v1",
										"5"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}